// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/repository/inventory_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	gomock "github.com/golang/mock/gomock"
	model "go_worlder_system/domain/model"
	reflect "reflect"
)

// MockInventoryRepository is a mock of InventoryRepository interface
type MockInventoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockInventoryRepositoryMockRecorder
}

// MockInventoryRepositoryMockRecorder is the mock recorder for MockInventoryRepository
type MockInventoryRepositoryMockRecorder struct {
	mock *MockInventoryRepository
}

// NewMockInventoryRepository creates a new mock instance
func NewMockInventoryRepository(ctrl *gomock.Controller) *MockInventoryRepository {
	mock := &MockInventoryRepository{ctrl: ctrl}
	mock.recorder = &MockInventoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInventoryRepository) EXPECT() *MockInventoryRepositoryMockRecorder {
	return m.recorder
}

// FindListByUserIDAndTypeID mocks base method
func (m *MockInventoryRepository) FindListByUserIDAndTypeID(userID string, inventoryTypeID int) ([]model.Inventory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindListByUserIDAndTypeID", userID, inventoryTypeID)
	ret0, _ := ret[0].([]model.Inventory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindListByUserIDAndTypeID indicates an expected call of FindListByUserIDAndTypeID
func (mr *MockInventoryRepositoryMockRecorder) FindListByUserIDAndTypeID(userID, inventoryTypeID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindListByUserIDAndTypeID", reflect.TypeOf((*MockInventoryRepository)(nil).FindListByUserIDAndTypeID), userID, inventoryTypeID)
}

// Create mocks base method
func (m *MockInventoryRepository) Create(arg0 *model.Inventory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockInventoryRepositoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockInventoryRepository)(nil).Create), arg0)
}

// Update mocks base method
func (m *MockInventoryRepository) Update(arg0 *model.Inventory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockInventoryRepositoryMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockInventoryRepository)(nil).Update), arg0)
}

// Delete mocks base method
func (m *MockInventoryRepository) Delete(arg0 *model.Inventory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockInventoryRepositoryMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockInventoryRepository)(nil).Delete), arg0)
}
